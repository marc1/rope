Each node contains a value and an array of pointers to other nodes in the list.

* Insert
append(val: u8) -- We simply go to the last element of layer 0,
and add a new node with value `val`. Then, we calculate the height of this new
node randomly. For example, say the random height is 3, meaning this node has 
links on layer 0 (as always) and layer 1 & 2. 

Since we know this element is being inserted at the last position on layer 0, 
there can be no elements after it on higher layers. That is, it can be
inserted as a forward link of the last element in the layer above it.

- First we insert it on layer 0, adding the new node as a forward link to the
  last node on layer 0. 
- Then, we add the new node as a forward link to the last node on layer 1.
- We repeat this for as many times as there are layers. In this case, just
  once more. 

If this is our implementation style, then it may be useful to make the list
doubly linked, and to keep a `tail` node.
